[gd_scene load_steps=8 format=3 uid="uid://cx46mlukul3fs"]

[sub_resource type="GDScript" id="GDScript_fibc4"]
script/source = "extends Node3D
var pickup = false

var player = null
var root
	
# Called every frame. 'delta' is the elapsed time since the previous frame.
func _input(event):
	if Input.is_key_pressed(KEY_V) and pickup == true:
		print(\"pickup desde el objeto\")
		
	if Input.is_key_pressed(KEY_V) and pickup == false:
		#queue_free()
		#transform.origin = get_node(\"Player\").transform.origin + Vector3(0,-2,-2)
		print(\"release desde el objeto\")

func resize():
	$Pickup/Outline.scale = ($Pickup/MeshInstance3D.scale*Vector3(GlobalVar.sizefactor,GlobalVar.sizefactor,GlobalVar.sizefactor))
	$Pickup/MeshInstance3D.scale = ($Pickup/MeshInstance3D.scale*Vector3(GlobalVar.sizefactor,GlobalVar.sizefactor,GlobalVar.sizefactor))
	$Pickup/CollisionShape3D.scale = $Pickup/CollisionShape3D.scale*Vector3(GlobalVar.sizefactor,GlobalVar.sizefactor,GlobalVar.sizefactor)
	$Pickup/Area3D.scale = $Pickup/Area3D.scale*Vector3(GlobalVar.sizefactor,GlobalVar.sizefactor,GlobalVar.sizefactor)


#func colorchange(value):
#	if value == 1:
#		var new_color = $Pickup/MeshInstance3D.mesh.material
#		#new_color.albedo_color = Color(0, 0, 255)
		#$Pickup/Outline.show()
#	if value == 2:
#		var new_color = $Pickup/MeshInstance3D.mesh.material
#		#new_color.albedo_color = Color(255, 0, 0)
#		$Pickup/Outline.hide()

func _on_area_3d_area_entered(area):
	$Pickup/Outline.show()


func _on_area_3d_area_exited(area):
	$Pickup/Outline.hide()

"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_fdmhs"]
resource_local_to_scene = true
cull_mode = 1
shading_mode = 0
albedo_color = Color(0.227451, 0.176471, 0.0705882, 1)
grow_amount = 3.33067e-16

[sub_resource type="BoxMesh" id="BoxMesh_30mcy"]
resource_local_to_scene = true
material = SubResource("StandardMaterial3D_fdmhs")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_jcodq"]
resource_local_to_scene = true
cull_mode = 1
shading_mode = 0
albedo_color = Color(1, 0.658824, 0.117647, 1)
grow_amount = 3.33067e-16

[sub_resource type="BoxMesh" id="BoxMesh_5eih2"]
resource_local_to_scene = true
material = SubResource("StandardMaterial3D_jcodq")
size = Vector3(1.07, 1.07, 1.07)

[sub_resource type="BoxShape3D" id="BoxShape3D_vhp8x"]

[sub_resource type="BoxShape3D" id="BoxShape3D_y2n3i"]

[node name="Pickable" type="Node3D"]
script = SubResource("GDScript_fibc4")

[node name="Pickup" type="RigidBody3D" parent="."]
collision_layer = 7
collision_mask = 7
axis_lock_linear_z = true

[node name="MeshInstance3D" type="MeshInstance3D" parent="Pickup"]
mesh = SubResource("BoxMesh_30mcy")

[node name="Outline" type="MeshInstance3D" parent="Pickup"]
visible = false
mesh = SubResource("BoxMesh_5eih2")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Pickup"]
shape = SubResource("BoxShape3D_vhp8x")

[node name="Area3D" type="Area3D" parent="Pickup"]
collision_layer = 4
collision_mask = 4

[node name="CollisionShape3D" type="CollisionShape3D" parent="Pickup/Area3D"]
shape = SubResource("BoxShape3D_y2n3i")

[connection signal="area_entered" from="Pickup/Area3D" to="." method="_on_area_3d_area_entered"]
[connection signal="area_exited" from="Pickup/Area3D" to="." method="_on_area_3d_area_exited"]
